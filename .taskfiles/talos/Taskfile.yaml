---
version: "3"

includes:
  k8s:
    internal: true
    taskfile: ../k8s

vars:
  cluster: '{{ .cluster | default "main" }}'

tasks:
  default:
    vars:
      cluster: &cluster '{{ or .cluster (fail "Argument (cluster) is required") }}'
    cmds:
      - talosctl {{.CLI_ARGS}} --talosconfig /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig

  genconfig:
    aliases: [gen]
    desc: Generate talos configs from talhelper
    dir: &dir "/{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos"
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    vars:
      cluster: *cluster
    cmds:
      - talhelper genconfig
    sources:
      - /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/talconfig.yaml
      - /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/talenv.sops.yaml
      - /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/talsecret.sops.yaml
    generates:
      - /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/*

  apply:
    dir: *dir
    desc: Apply talos config to a given node
    vars: &apply-vars
      node: '{{ or .node (fail "Argument (node) is required") }}'
      ip: '{{ .ip | default .node }}'
      cluster: *cluster
    summary: &apply-summary |
      Args:
        cluster: Cluster to run command against (required)
        node:    name of the node to use (required)
        ip:      address of node to apply (node name if not specified)
    cmds:
      - task: genconfig
      - |-
        talosctl apply-config \
            --nodes {{.ip}} \
            --file /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/{{.cluster}}-{{.node}}.yaml \
            --talosconfig /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig

  init:
    desc: Apply initial talos config to a given node (insecure)
    dir: *dir
    summary: *apply-summary
    vars: *apply-vars
    cmds:
      - task: genconfig
      - |-
        talosctl apply-config \
            --nodes {{.ip}} \
            --file /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/{{.cluster}}-{{.node}}.yaml \
            --talosconfig /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig \
            --insecure

  bootstrap:
    desc: Run all bootstrap related tasks for a talos cluster
    dir: *dir
    summary: *apply-summary
    vars: *apply-vars
    cmds:
      - until talosctl bootstrap --talosconfig /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig --nodes {{.ip}} ; do sleep 1; done
      - until talosctl kubeconfig --talosconfig /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig --nodes {{.ip}} ; do sleep 1; done
      - |
        sed -i 's/current-context: admin@.*/current-context: admin@{{.cluster}}/g' ~/.kube/config || true
      - task: cilium-bootstrap-apply
        vars:
          cluster: "{{.cluster}}"