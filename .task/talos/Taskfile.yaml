---
version: "3"

includes:
  k8s:
    internal: true
    taskfile: ../k8s

tasks:
  desc: Runs talosctl with a generated talosconfig
  default:
    requires:
      vars: [cluster]
    cmd: talosctl {{.CLI_ARGS}} --talosconfig /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig

  health:
    desc: Gets the current health status of the cluster
    summary: |
      Args:
        cluster: cluster to run command against (required)
        ip:      address of node to apply (required)
    requires:
      vars: [cluster, ip]
    cmd: talosctl health --nodes {{.ip}} --talosconfig /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig

  genconfig:
    aliases: [gen]
    desc: Generate talos configs from talhelper
    dir: &dir "/{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos"
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    requires:
      vars: [cluster]
    cmds:
      - talhelper genconfig
    sources:
      - /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/talconfig.yaml
      - /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/talenv.sops.yaml
      - /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/talsecret.sops.yaml
    generates:
      - /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/*

  apply:
    dir: *dir
    desc: Apply talos config to a given node
    requires:
      vars: [cluster, node]
    vars: &apply-vars
      ip: '{{ .ip | default .node }}'
      CONFIG_HOME: /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig
    summary: &apply-summary |
      Args:
        cluster: Cluster to run command against (required)
        node:    name of the node to use (required)
        ip:      address of node to apply (node name if not specified)
    cmds:
      - task: genconfig
      - |-
        talosctl apply-config \
            --nodes {{.ip}} \
            --file {{.CONFIG_HOME}}/{{.cluster}}-{{.node}}.yaml \
            --talosconfig {{.CONFIG_HOME}}/talosconfig \
            {{.CLI_ARGS}}

  init:
    desc: Apply initial talos config to a given node (insecure)
    dir: *dir
    summary: *apply-summary
    vars: *apply-vars
    requires:
      vars: [cluster, node]
    cmd:
      task: apply
      vars: {cluster: "{{.cluster}}", node: "{{.node}}", ip: "{{.ip}}", CLI_ARGS: "--insecure"}

  bootstrap:
    desc: Run all bootstrap related tasks for a talos cluster
    dir: *dir
    requires:
      vars: [cluster, ip]
    summary: |
      Args:
        cluster:  cluster to run command against (required)
        ip:       address of node to bootstrap (required)
    vars:
      talosconfig: /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig
    cmds:
      - talosctl bootstrap --talosconfig {{.talosconfig}} --nodes {{.ip}}
      - sleep 180
      - talosctl kubeconfig --talosconfig {{.talosconfig}} --nodes {{.ip}} --force
      - "sed -i 's/current-context: admin@.*/current-context: admin@{{.cluster}}/g' ~/.kube/config || true"
      - kubectl certificate approve $(kubectl get csr --sort-by=.metadata.creationTimestamp | grep Pending | awk '{print $1}')

  reset:
    desc: Reset a node, wiping its STATE and EPHEMERAL partitions
    dir: *dir
    requires:
      vars: [cluster, ip]
    summary: |
      Args:
        cluster:  cluster to run command against (required)
        ip:       address of node to reset (required)
        graceful: attempt to drain the node (default true)
    vars:
      graceful: '{{ .graceful | default "true" }}'
    prompt: This will destroy the target node and reset to a default talos install... Continue?
    cmd:
      task: reset-no-prompt

  # useful for other reset scripts
  reset-no-prompt:
    internal: true
    requires:
      vars: [cluster, ip]
    vars:
      graceful: '{{ .graceful | default "true" }}'
    cmd: |-
      talosctl reset \
          --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL \
          --graceful={{.graceful}} --reboot=true --wait={{.graceful}} \
          --talosconfig /{{.ROOT_DIR}}/kubernetes/{{.cluster}}/talos/clusterconfig/talosconfig \
          --nodes {{.ip}}